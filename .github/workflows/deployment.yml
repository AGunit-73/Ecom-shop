# GitHub Actions Workflow for Ecom-Shop CI/CD Pipeline
# This workflow automates the process of testing and deploying the Ecom-Shop application.


name: Ecom-Shop CI/CD

# Triggers for the workflow
on:
  push:
    branches:
      - main           # Trigger workflow on pushes to the main branch
      - development    # Trigger workflow on pushes to the development branch
  pull_request:
    branches:
      - main           # Trigger workflow on pull requests to the main branch
      - development    # Trigger workflow on pull requests to the development branch

# Define jobs to be executed in the workflow
jobs:
  # Build and Test Job
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.20.4]

    env:
      ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
      ENCRYPTION_IV: ${{ secrets.ENCRYPTION_IV }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js "${{ matrix.node-version }}"
        uses: actions/setup-node@v3
        with:
          node-version: "${{ matrix.node-version }}"

      - name: Install dependencies
        run: |
          cd isolora
          yarn install

      - name: Run build
        run: |
          cd isolora
          yarn build

      - name: Run tests
        run: |
          cd isolora
          yarn test

  # Deployment Job
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        node-version: [18.20.4]

    env:
      ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
      ENCRYPTION_IV: ${{ secrets.ENCRYPTION_IV }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js "${{ matrix.node-version }}"
        uses: actions/setup-node@v3
        with:
          node-version: "${{ matrix.node-version }}"

      # Step to install the latest Vercel CLI
      - name: Install the latest Vercel CLI
        run: yarn global add vercel@latest

      - name: Install dependencies
        run: |
          cd isolora
          yarn install

      - name: Build for deployment
        run: |
          cd isolora
          yarn build

      - name: Deploy to Vercel
        run: |
          cd isolora
          vercel --prod --yes --token $VERCEL_TOKEN  # Added --yes flag to confirm deployment
